{"ast":null,"code":"var _jsxFileName = \"/Users/fawzar/dev/workspace/GoogleBooksSearch/booksapp/client/src/pages/Books.js\";\nimport React, { useState, useEffect } from 'react';\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from '../utils/API';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from '../components/Grid';\nimport { List, ListItem } from '../components/List';\nimport { Input, TextArea, FormBtn } from '../components/Forms';\nimport Jumbotron from '../components/Jumbotron';\n\nfunction Books() {\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormobject] = useState({});\n  useEffect(() => {\n    loadBooks();\n  }, []); // loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(res => setBooks(res.data)).catch(err => console.log(err));\n  }\n\n  ; // deletes a book from the database with a given ID and reloads books from the database\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(res => loadBooks()).catch(err => console.log(err));\n  }\n\n  ; // handles updating the component state when the user types into the input field\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormobject({ ...formObject,\n      [name]: value\n    });\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      }).then(res => loadBooks()).catch(err => console.log(err));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"author\",\n    placeholder: \"author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"synopsis\",\n    placeholder: \"synopsis (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.title),\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Submit Book\")), /*#__PURE__*/React.createElement(Col, {\n    size: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Books on my List\"))))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/fawzar/dev/workspace/GoogleBooksSearch/booksapp/client/src/pages/Books.js"],"names":["React","useState","useEffect","DeleteBtn","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Jumbotron","Books","books","setBooks","formObject","setFormobject","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","title","author","saveBook","synopsis"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from '../utils/API';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from '../components/Grid';\nimport { List, ListItem } from '../components/List';\nimport { Input, TextArea, FormBtn } from '../components/Forms';\nimport Jumbotron from '../components/Jumbotron';\n\nfunction Books() {\n    const [books, setBooks] = useState([])\n    const [formObject, setFormobject ] = useState({})\n\n    useEffect(() => {\n        loadBooks()\n    }, [])\n\n    // loads all books and sets them to books\n    function loadBooks() {\n        API.getBooks()\n            .then(res => \n                setBooks(res.data)\n            ).catch(err => console.log(err));\n    };\n\n    // deletes a book from the database with a given ID and reloads books from the database\n    function deleteBook(id) {\n        API.deleteBook(id) \n            .then(res => loadBooks())\n            .catch(err => console.log(err));\n    };\n\n    // handles updating the component state when the user types into the input field\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setFormobject({...formObject, [name]: value})\n    };\n    \n     // When the form is submitted, use the API.saveBook method to save the book data\n    // Then reload books from the database\n    function handleFormSubmit(event) {\n        event.preventDefault();\n\n        if(formObject.title && formObject.author) {\n            API.saveBook({\n                title: formObject.title,\n                author: formObject.author,\n                synopsis: formObject.synopsis,\n            })\n            .then(res => loadBooks())\n            .catch(err => console.log(err))\n        }\n    };\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col size=\"md-6\">\n\n                    <form>\n                        <Input\n                            onChange={handleInputChange}\n                            name=\"title\"\n                            placeholder=\"Title (required)\"\n                        />\n                        <Input\n                            onChange={handleInputChange}\n                            name=\"author\"\n                            placeholder=\"author (required)\"\n                        />\n                        <TextArea\n                            onChange={handleInputChange}\n                            name=\"synopsis\"\n                            placeholder=\"synopsis (required)\"\n                        />\n                        <FormBtn\n                            disabled={!(formObject.author && formObject.title)}\n                            onClick = {handleFormSubmit}\n                        >\n                        Submit Book\n                        </FormBtn>\n                    </form>\n                        <Col size >\n                            <Jumbotron>\n                                <h1>Books on my List</h1>\n                            </Jumbotron>\n                        </Col>\n                </Col>\n            </Row>\n        </Container>\n    )\n    \n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}